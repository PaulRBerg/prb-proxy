name: "CI"

concurrency:
  cancel-in-progress: true
  group: ${{github.workflow}}-${{github.ref}}

env:
  FOUNDRY_PROFILE: "ci"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "main"
      - "staging"

jobs:
  lint:
    runs-on: "ubuntu-latest"
    defaults:
      run:
        working-directory: "packages/proxy"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Install Pnpm"
        uses: "pnpm/action-setup@v2"
        with:
          version: "8"

      - name: "Install Node.js"
        uses: "actions/setup-node@v3"
        with:
          cache: "pnpm"
          node-version: "lts/*"

      - name: "Install the Node.js dependencies"
        run: "pnpm install"

      - name: "Lint the contracts"
        run: "pnpm lint"

      - name: "Add lint summary"
        run: |
          echo "## Lint result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  build:
    runs-on: "ubuntu-latest"
    defaults:
      run:
        working-directory: "packages/proxy"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Install Pnpm"
        uses: "pnpm/action-setup@v2"
        with:
          version: "8"

      - name: "Install Node.js"
        uses: "actions/setup-node@v3"
        with:
          cache: "pnpm"
          node-version: "lts/*"

      - name: "Install the Node.js dependencies"
        run: "pnpm install"

      - name: "Show the Foundry config"
        run: "forge config"

      - name: "Generate and prepare the contract artifacts"
        run: "./shell/prepare-artifacts.sh"

      - name: "Cache the build so that it can be re-used by the other jobs"
        uses: "actions/cache/save@v3"
        with:
          path: "out-optimized"
          key: "foundry-build-${{ github.sha }}"

      - name: "Store the contract artifacts in CI"
        uses: "actions/upload-artifact@v3"
        with:
          name: "contract-artifacts"
          path: "artifacts"

      - name: "Add build summary"
        run: |
          echo "## Build result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  test:
    needs: ["lint", "build"]
    env:
      FOUNDRY_FUZZ_RUNS: "5000"
    runs-on: "ubuntu-latest"
    defaults:
      run:
        working-directory: "packages/proxy"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Restore the cached build"
        uses: "actions/cache/restore@v3"
        with:
          fail-on-cache-miss: true
          key: "foundry-build-${{ github.sha }}"
          path: "out-optimized"

      - name: "Run the tests against the optimized build"
        run: "FOUNDRY_PROFILE=test-optimized forge test"

      - name: "Add build and test summary"
        run: |
          echo "## Tests result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  coverage:
    needs: ["lint", "build"]
    runs-on: "ubuntu-latest"
    defaults:
      run:
        working-directory: "packages/proxy"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Run the tests and generate the coverage report"
        run: "forge coverage --report lcov"

      - name: "Upload coverage report to Codecov"
        uses: "codecov/codecov-action@v3"
        with:
          files: "./lcov.info"

      - name: "Add coverage summary"
        run: |
          echo "## Coverage result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Uploaded to Codecov" >> $GITHUB_STEP_SUMMARY

  slither:
    needs: ["lint", "build"]
    runs-on: "ubuntu-latest"
    defaults:
      run:
        working-directory: "packages/proxy"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Run Slither"
        uses: "crytic/slither-action@v0.3.0"
        id: "slither-run"
        with:
          fail-on: "none" # Required to avoid failing the CI run regardless of findings
          sarif: "results.sarif"

      - name: "Upload SARIF file"
        uses: "github/codeql-action/upload-sarif@v2"
        with:
          sarif_file: "${{ steps.slither-run.outputs.sarif }}"

      - name: "Add Slither summary"
        run: |
          echo "## Slither result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY
